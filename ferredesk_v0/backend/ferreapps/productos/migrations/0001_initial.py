# Generated by Django 5.0.1 on 2025-08-22 22:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='VistaStockProducto',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('denominacion', models.CharField(max_length=50)),
                ('codigo_venta', models.CharField(max_length=15)),
                ('cantidad_minima', models.IntegerField(blank=True, null=True)),
                ('stock_total', models.DecimalField(decimal_places=2, max_digits=15)),
                ('necesita_reposicion', models.IntegerField()),
                ('proveedor_razon', models.CharField(blank=True, max_length=50, null=True)),
                ('proveedor_fantasia', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Vista de Stock de Producto',
                'verbose_name_plural': 'Vistas de Stock de Productos',
                'db_table': 'VISTA_STOCK_PRODUCTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlicuotaIVA',
            fields=[
                ('id', models.AutoField(db_column='ALI_ID', primary_key=True, serialize=False)),
                ('codigo', models.CharField(blank=True, db_column='ALI_CODIGO', max_length=5, null=True, unique=True)),
                ('deno', models.CharField(db_column='ALI_DENO', max_length=20)),
                ('porce', models.DecimalField(db_column='ALI_PORCE', decimal_places=2, max_digits=5)),
            ],
            options={
                'verbose_name': 'Alicuota IVA',
                'verbose_name_plural': 'Alicuotas IVA',
                'db_table': 'ALICUOTASIVA',
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Familia',
            fields=[
                ('id', models.AutoField(db_column='FAM_ID', primary_key=True, serialize=False)),
                ('deno', models.CharField(db_column='FAM_DENO', max_length=50)),
                ('comentario', models.CharField(blank=True, db_column='FAM_COMENTARIO', max_length=50, null=True)),
                ('nivel', models.CharField(db_column='FAM_NIVEL', max_length=3)),
                ('acti', models.CharField(db_column='FAM_ACTI', max_length=1)),
            ],
            options={
                'db_table': 'FAMILIAS',
            },
        ),
        migrations.CreateModel(
            name='Ferreteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=200)),
                ('telefono', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('activa', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('situacion_iva', models.CharField(choices=[('RI', 'Responsable Inscripto'), ('MO', 'Monotributista')], default='RI', help_text='Condición fiscal del negocio/emisor para comprobantes.', max_length=2)),
                ('punto_venta_arca', models.CharField(blank=True, help_text='Punto de venta ARCA para comprobantes fiscales', max_length=50, null=True)),
                ('cuit_cuil', models.CharField(blank=True, help_text='CUIT/CUIL de la empresa', max_length=13, null=True)),
                ('razon_social', models.CharField(blank=True, help_text='Razón social de la empresa', max_length=200, null=True)),
                ('ingresos_brutos', models.CharField(blank=True, help_text='Ingresos Brutos de la empresa', max_length=20, null=True)),
                ('inicio_actividad', models.DateField(blank=True, help_text='Fecha de inicio de actividad', null=True)),
                ('logo_empresa', models.ImageField(blank=True, help_text='Logo de la empresa para comprobantes', null=True, upload_to='logos/')),
                ('certificado_arca', models.FileField(blank=True, help_text='Certificado ARCA (.pem) para autenticación con servicios web de AFIP', null=True, upload_to='arca/ferreteria_1/certificados/')),
                ('clave_privada_arca', models.FileField(blank=True, help_text='Clave privada ARCA (.pem) para firma digital de comprobantes', null=True, upload_to='arca/ferreteria_1/claves_privadas/')),
                ('modo_arca', models.CharField(choices=[('HOM', 'Homologación'), ('PROD', 'Producción')], default='HOM', help_text='Modo de operación ARCA (Homologación para pruebas, Producción para uso real)', max_length=4)),
                ('arca_habilitado', models.BooleanField(default=False, help_text='Activar/desactivar la emisión automática de comprobantes ARCA')),
                ('permitir_stock_negativo', models.BooleanField(default=False, help_text='Permite que el sistema permita vender con stock negativo por defecto')),
                ('arca_configurado', models.BooleanField(default=False, help_text='Indica si la configuración ARCA está completa y válida')),
                ('arca_ultima_validacion', models.DateTimeField(blank=True, help_text='Fecha y hora de la última validación exitosa de la configuración ARCA', null=True)),
                ('arca_error_configuracion', models.TextField(blank=True, help_text='Mensaje de error si la configuración ARCA no es válida', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductoTempID',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.AutoField(db_column='PRO_ID', primary_key=True, serialize=False)),
                ('razon', models.CharField(db_column='PRO_RAZON', max_length=50)),
                ('fantasia', models.CharField(db_column='PRO_FANTASIA', max_length=50)),
                ('domicilio', models.CharField(db_column='PRO_DOMI', max_length=50)),
                ('tel1', models.CharField(blank=True, db_column='PRO_TEL1', max_length=12, null=True)),
                ('tel2', models.CharField(blank=True, db_column='PRO_TEL2', max_length=12, null=True)),
                ('tel3', models.CharField(blank=True, db_column='PRO_TEL3', max_length=12, null=True)),
                ('cuit', models.CharField(db_column='PRO_CUIT', max_length=11, unique=True)),
                ('ib', models.CharField(blank=True, db_column='PRO_IB', max_length=10, null=True)),
                ('cpostal', models.CharField(blank=True, db_column='PRO_CPOSTAL', max_length=7, null=True)),
                ('iva', models.SmallIntegerField(blank=True, db_column='PRO_IVA', null=True)),
                ('contacto', models.CharField(blank=True, db_column='PRO_CONTACTO', max_length=50, null=True)),
                ('impsalcta', models.DecimalField(db_column='PRO_IMPSALCTA', decimal_places=2, max_digits=12)),
                ('fecsalcta', models.DateField(db_column='PRO_FECSALCTA')),
                ('idbar', models.IntegerField(blank=True, db_column='PRO_IDBAR', null=True)),
                ('idloc', models.IntegerField(blank=True, db_column='PRO_IDLOC', null=True)),
                ('idprv', models.IntegerField(blank=True, db_column='PRO_IDPRV', null=True)),
                ('idcap', models.IntegerField(blank=True, db_column='PRO_IDCAP', null=True)),
                ('acti', models.CharField(blank=True, db_column='PRO_ACTI', max_length=1, null=True)),
                ('sigla', models.CharField(blank=True, db_column='PRO_SIGLA', max_length=3, null=True, unique=True)),
            ],
            options={
                'db_table': 'PROVEEDORES',
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('precio_compra', models.DecimalField(decimal_places=2, max_digits=10)),
                ('precio_venta', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock', models.IntegerField(default=0)),
                ('stock_minimo', models.IntegerField(default=5)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='productos.categoria')),
                ('ferreteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productos.ferreteria')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.IntegerField(db_column='STO_ID', primary_key=True, serialize=False)),
                ('codvta', models.CharField(db_column='STO_CODVTA', max_length=15, unique=True)),
                ('deno', models.CharField(db_column='STO_DENO', max_length=50)),
                ('orden', models.SmallIntegerField(blank=True, db_column='STO_ORDEN', null=True)),
                ('unidad', models.CharField(blank=True, db_column='STO_UNIDAD', max_length=10, null=True)),
                ('margen', models.DecimalField(db_column='STO_MARGEN', decimal_places=2, max_digits=5)),
                ('cantmin', models.IntegerField(blank=True, db_column='STO_CANTMIN', null=True)),
                ('acti', models.CharField(choices=[('S', 'Activo'), ('N', 'Inactivo')], db_column='STO_ACTI', default='S', max_length=1)),
                ('idaliiva', models.ForeignKey(db_column='STO_IDALIIVA', on_delete=django.db.models.deletion.PROTECT, related_name='stocks', to='productos.alicuotaiva')),
                ('idfam1', models.ForeignKey(blank=True, db_column='STO_IDFAM1', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stocks_fam1', to='productos.familia')),
                ('idfam2', models.ForeignKey(blank=True, db_column='STO_IDFAM2', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stocks_fam2', to='productos.familia')),
                ('idfam3', models.ForeignKey(blank=True, db_column='STO_IDFAM3', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stocks_fam3', to='productos.familia')),
                ('proveedor_habitual', models.ForeignKey(db_column='STO_IDPRO', on_delete=django.db.models.deletion.PROTECT, related_name='productos_habituales', to='productos.proveedor')),
            ],
            options={
                'db_table': 'STOCK',
            },
        ),
        migrations.CreateModel(
            name='PrecioProveedorExcel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_producto_excel', models.CharField(db_index=True, max_length=100)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=15)),
                ('denominacion', models.CharField(blank=True, help_text='Denominación del producto desde Excel', max_length=200, null=True)),
                ('fecha_carga', models.DateTimeField(auto_now_add=True)),
                ('nombre_archivo', models.CharField(max_length=255)),
                ('proveedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='precios_excel', to='productos.proveedor')),
            ],
            options={
                'verbose_name': 'Precio de producto por proveedor (Excel)',
                'verbose_name_plural': 'Precios de productos por proveedor (Excel)',
                'unique_together': {('proveedor', 'codigo_producto_excel')},
            },
        ),
        migrations.CreateModel(
            name='StockProve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.DecimalField(db_column='STP_CANTIDAD', decimal_places=2, default=0, max_digits=15)),
                ('costo', models.DecimalField(db_column='STP_COSTO', decimal_places=2, default=0, max_digits=15)),
                ('fecultcan', models.DateField(blank=True, db_column='STP_FECULTCAN', null=True)),
                ('fecultcos', models.DateField(blank=True, db_column='STP_FECULTCOS', null=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, db_column='STP_FECHA_ACTUALIZACION')),
                ('codigo_producto_proveedor', models.CharField(blank=True, db_column='STP_CODPROV', max_length=100, null=True)),
                ('proveedor', models.ForeignKey(db_column='STP_IDPRO', on_delete=django.db.models.deletion.CASCADE, related_name='proveedor_stocks', to='productos.proveedor')),
                ('stock', models.ForeignKey(db_column='STP_IDSTO', on_delete=django.db.models.deletion.CASCADE, related_name='stock_proveedores', to='productos.stock')),
            ],
            options={
                'db_table': 'STOCKPROVE',
                'unique_together': {('stock', 'proveedor')},
            },
        ),
    ]
