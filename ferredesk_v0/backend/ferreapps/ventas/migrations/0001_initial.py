# Generated by Django 5.0.1 on 2025-09-19 06:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='VentaCalculada',
            fields=[
                ('ven_id', models.IntegerField(primary_key=True, serialize=False)),
                ('ven_sucursal', models.SmallIntegerField()),
                ('ven_fecha', models.DateField()),
                ('hora_creacion', models.TimeField(null=True)),
                ('comprobante_id', models.CharField(max_length=20, null=True)),
                ('comprobante_nombre', models.CharField(max_length=50, null=True)),
                ('comprobante_letra', models.CharField(max_length=1, null=True)),
                ('comprobante_tipo', models.CharField(max_length=30, null=True)),
                ('comprobante_codigo_afip', models.CharField(max_length=8, null=True)),
                ('comprobante_descripcion', models.CharField(max_length=200, null=True)),
                ('comprobante_activo', models.BooleanField(null=True)),
                ('ven_punto', models.SmallIntegerField()),
                ('ven_numero', models.IntegerField()),
                ('numero_formateado', models.CharField(max_length=20, null=True)),
                ('ven_descu1', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ven_descu2', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ven_descu3', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ven_vdocomvta', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ven_vdocomcob', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ven_estado', models.CharField(max_length=2, null=True)),
                ('ven_idcli', models.IntegerField()),
                ('ven_cuit', models.CharField(max_length=20, null=True)),
                ('ven_domicilio', models.CharField(max_length=100, null=True)),
                ('ven_razon_social', models.CharField(max_length=100, null=True)),
                ('ven_idpla', models.IntegerField()),
                ('ven_idvdo', models.IntegerField()),
                ('ven_copia', models.SmallIntegerField()),
                ('ven_fecanula', models.DateField(null=True)),
                ('ven_cae', models.CharField(max_length=20, null=True)),
                ('ven_caevencimiento', models.DateField(null=True)),
                ('ven_qr', models.BinaryField(null=True)),
                ('ven_observacion', models.TextField(null=True)),
                ('ven_bonificacion_general', models.FloatField(default=0.0)),
                ('subtotal_bruto', models.DecimalField(decimal_places=3, max_digits=15)),
                ('ven_impneto', models.DecimalField(decimal_places=3, max_digits=15)),
                ('iva_global', models.DecimalField(decimal_places=3, max_digits=15)),
                ('ven_total', models.DecimalField(decimal_places=3, max_digits=15)),
                ('cliente_razon', models.CharField(max_length=100, null=True)),
                ('cliente_fantasia', models.CharField(max_length=100, null=True)),
                ('cliente_domicilio', models.CharField(max_length=100, null=True)),
                ('cliente_telefono', models.CharField(max_length=20, null=True)),
                ('cliente_cuit', models.CharField(max_length=20, null=True)),
                ('cliente_ingresos_brutos', models.CharField(max_length=20, null=True)),
                ('cliente_localidad', models.CharField(max_length=100, null=True)),
                ('cliente_provincia', models.CharField(max_length=100, null=True)),
                ('cliente_condicion_iva', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'VENTA_CALCULADO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VentaDetalleItemCalculado',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('vdi_idve', models.IntegerField()),
                ('vdi_orden', models.SmallIntegerField()),
                ('vdi_idsto', models.IntegerField(null=True)),
                ('vdi_idpro', models.IntegerField(null=True)),
                ('vdi_cantidad', models.DecimalField(decimal_places=2, max_digits=9)),
                ('vdi_costo', models.DecimalField(decimal_places=3, max_digits=13)),
                ('vdi_margen', models.DecimalField(decimal_places=2, max_digits=10)),
                ('vdi_bonifica', models.DecimalField(decimal_places=2, max_digits=4)),
                ('vdi_detalle1', models.CharField(max_length=50, null=True)),
                ('vdi_detalle2', models.CharField(max_length=40, null=True)),
                ('vdi_idaliiva', models.IntegerField()),
                ('codigo', models.CharField(max_length=40, null=True)),
                ('unidad', models.CharField(max_length=20, null=True)),
                ('ali_porce', models.DecimalField(decimal_places=2, max_digits=5)),
                ('vdi_precio_unitario_final', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('precio_unitario_bonificado_con_iva', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('precio_unitario_sin_iva', models.DecimalField(decimal_places=4, max_digits=15, null=True)),
                ('iva_unitario', models.DecimalField(decimal_places=4, max_digits=15, null=True)),
                ('bonif_monto_unit_neto', models.DecimalField(decimal_places=4, max_digits=15, null=True)),
                ('precio_unit_bonif_sin_iva', models.DecimalField(decimal_places=4, max_digits=15, null=True)),
                ('precio_unitario_bonif_desc_sin_iva', models.DecimalField(decimal_places=4, max_digits=15, null=True)),
                ('precio_unitario_bonificado', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('subtotal_neto', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('iva_monto', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('total_item', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('margen_monto', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('margen_porcentaje', models.DecimalField(decimal_places=4, max_digits=10, null=True)),
                ('ven_descu1', models.DecimalField(decimal_places=2, max_digits=4, null=True)),
                ('ven_descu2', models.DecimalField(decimal_places=2, max_digits=4, null=True)),
            ],
            options={
                'db_table': 'VENTADETALLEITEM_CALCULADO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VentaIVAAlicuota',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('vdi_idve', models.IntegerField()),
                ('ali_porce', models.DecimalField(decimal_places=2, max_digits=5)),
                ('neto_gravado', models.DecimalField(decimal_places=2, max_digits=15)),
                ('iva_total', models.DecimalField(decimal_places=2, max_digits=15)),
            ],
            options={
                'db_table': 'VENTAIVA_ALICUOTA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comprobante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_afip', models.CharField(db_column='CBT_CODIGO_AFIP', max_length=8, unique=True)),
                ('nombre', models.CharField(db_column='CBT_NOMBRE', max_length=50)),
                ('descripcion', models.CharField(blank=True, db_column='CBT_DESCRIPCION', max_length=200, null=True)),
                ('letra', models.CharField(blank=True, db_column='CBT_LETRA', max_length=1, null=True)),
                ('tipo', models.CharField(blank=True, db_column='CBT_TIPO', max_length=30, null=True)),
                ('activo', models.BooleanField(db_column='CBT_ACTIVO', default=True)),
            ],
            options={
                'verbose_name': 'Comprobante',
                'verbose_name_plural': 'Comprobantes',
                'db_table': 'COMPROBANTES',
            },
        ),
        migrations.CreateModel(
            name='ComprobanteAsociacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Asociaci√≥n de Comprobante',
                'verbose_name_plural': 'Asociaciones de Comprobantes',
                'db_table': 'VENTA_COMPROBANTE_ASOCIACION',
            },
        ),
        migrations.CreateModel(
            name='VentaDetalleMan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vdm_idve', models.IntegerField(db_column='VDM_IDVE')),
                ('vdm_orden', models.SmallIntegerField(db_column='VDM_ORDEN')),
                ('vdm_deno', models.CharField(db_column='VDM_DENO', max_length=40)),
                ('vdm_importe', models.DecimalField(db_column='VDM_IMPORTE', decimal_places=2, max_digits=12)),
                ('vdm_exento', models.CharField(db_column='VDM_EXENTO', max_length=1, null=True)),
            ],
            options={
                'db_table': 'VENTA_DETAMAN',
            },
        ),
        migrations.CreateModel(
            name='VentaRemPed',
            fields=[
                ('vrp_id', models.AutoField(db_column='VRP_ID', primary_key=True, serialize=False)),
                ('vrp_sucursal', models.SmallIntegerField(db_column='VRP_SUCURSAL')),
                ('vrp_orden', models.SmallIntegerField(db_column='VRP_ORDEN')),
                ('vrp_fecha', models.DateField(db_column='VRP_FECHA')),
                ('vrp_tipo', models.CharField(db_column='VRP_TIPO', max_length=2)),
                ('vrp_letra', models.CharField(db_column='VRP_LETRA', max_length=1)),
                ('vrp_punto', models.SmallIntegerField(db_column='VRP_PUNTO')),
                ('vrp_idcli', models.IntegerField(db_column='VRP_IDCLI')),
                ('vrp_numero', models.IntegerField(db_column='VRP_NUMERO')),
                ('vrp_idsto', models.IntegerField(db_column='VRP_IDSTO')),
                ('vrp_deno', models.CharField(db_column='VRP_DENO', max_length=40, null=True)),
                ('vrp_cantidad', models.DecimalField(db_column='VRP_CANTIDAD', decimal_places=2, max_digits=9)),
                ('vrp_importe', models.DecimalField(db_column='VRP_IMPORTE', decimal_places=2, max_digits=12)),
                ('vrp_cantiusa', models.DecimalField(db_column='VRP_CANTIUSA', decimal_places=2, max_digits=9)),
                ('vrp_bonifica', models.DecimalField(db_column='VRP_BONIFICA', decimal_places=2, max_digits=4, null=True)),
                ('vrp_pretot', models.BigIntegerField(db_column='VRP_PRETOT', null=True)),
                ('vrp_ref', models.CharField(db_column='VRP_REF', max_length=50, null=True)),
                ('vrp_presenta', models.CharField(db_column='VRP_PRESENTA', max_length=25, null=True)),
                ('vrp_cortado', models.CharField(db_column='VRP_CORTADO', max_length=5, null=True)),
                ('vrp_piezas', models.SmallIntegerField(db_column='VRP_PIEZAS', null=True)),
            ],
            options={
                'db_table': 'VENTA_REMPED',
            },
        ),
        migrations.CreateModel(
            name='Venta',
            fields=[
                ('ven_id', models.AutoField(db_column='VEN_ID', primary_key=True, serialize=False)),
                ('ven_sucursal', models.SmallIntegerField(db_column='VEN_SUCURSAL')),
                ('ven_fecha', models.DateField(db_column='VEN_FECHA')),
                ('hora_creacion', models.TimeField(auto_now_add=True, db_column='VEN_HORA_CREACION', null=True)),
                ('ven_punto', models.SmallIntegerField(db_column='VEN_PUNTO')),
                ('ven_numero', models.IntegerField(db_column='VEN_NUMERO')),
                ('ven_descu1', models.DecimalField(db_column='VEN_DESCU1', decimal_places=2, max_digits=4)),
                ('ven_descu2', models.DecimalField(db_column='VEN_DESCU2', decimal_places=2, max_digits=4)),
                ('ven_descu3', models.DecimalField(db_column='VEN_DESCU3', decimal_places=2, max_digits=4)),
                ('ven_vdocomvta', models.DecimalField(db_column='VEN_VDOCOMVTA', decimal_places=2, max_digits=4)),
                ('ven_vdocomcob', models.DecimalField(db_column='VEN_VDOCOMCOB', decimal_places=2, max_digits=4)),
                ('ven_estado', models.CharField(blank=True, db_column='VEN_ESTADO', max_length=2, null=True)),
                ('ven_cuit', models.CharField(blank=True, db_column='VEN_CUIT', max_length=20, null=True)),
                ('ven_dni', models.CharField(blank=True, db_column='VEN_DNI', max_length=20, null=True)),
                ('ven_domicilio', models.CharField(blank=True, db_column='VEN_DOMICILIO', max_length=100, null=True)),
                ('ven_razon_social', models.CharField(blank=True, db_column='VEN_RAZON_SOCIAL', max_length=100, null=True)),
                ('ven_idpla', models.IntegerField(db_column='VEN_IDPLA')),
                ('ven_idvdo', models.IntegerField(db_column='VEN_IDVDO')),
                ('ven_copia', models.SmallIntegerField(db_column='VEN_COPIA')),
                ('ven_fecanula', models.DateField(blank=True, db_column='VEN_FECANULA', null=True)),
                ('ven_cae', models.CharField(blank=True, db_column='VEN_CAE', max_length=20, null=True)),
                ('ven_caevencimiento', models.DateField(blank=True, db_column='VEN_CAEVENCIMIENTO', null=True)),
                ('ven_qr', models.BinaryField(blank=True, db_column='VEN_QR', null=True)),
                ('ven_observacion', models.TextField(blank=True, db_column='VEN_OBSERVACION', null=True)),
                ('ven_bonificacion_general', models.FloatField(db_column='VEN_BONIFICACION_GENERAL', default=0.0)),
                ('ven_vence', models.DateField(blank=True, db_column='VEN_VENCE', null=True)),
                ('comprobante', models.ForeignKey(blank=True, db_column='VEN_CODCOMPROB', null=True, on_delete=django.db.models.deletion.PROTECT, to='ventas.comprobante', to_field='codigo_afip')),
                ('comprobantes_asociados', models.ManyToManyField(related_name='notas_de_credito_que_la_afectan', through='ventas.ComprobanteAsociacion', to='ventas.venta')),
                ('ven_idcli', models.ForeignKey(db_column='VEN_IDCLI', on_delete=django.db.models.deletion.PROTECT, related_name='ventas', to='clientes.cliente')),
            ],
            options={
                'db_table': 'VENTA',
            },
        ),
        migrations.AddField(
            model_name='comprobanteasociacion',
            name='factura_afectada',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas_de_credito_recibidas', to='ventas.venta'),
        ),
        migrations.AddField(
            model_name='comprobanteasociacion',
            name='nota_credito',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facturas_anuladas', to='ventas.venta'),
        ),
        migrations.CreateModel(
            name='VentaDetalleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vdi_orden', models.SmallIntegerField(db_column='VDI_ORDEN')),
                ('vdi_idsto', models.IntegerField(blank=True, db_column='VDI_IDSTO', null=True)),
                ('vdi_idpro', models.IntegerField(blank=True, db_column='VDI_IDPRO', null=True)),
                ('vdi_cantidad', models.DecimalField(db_column='VDI_CANTIDAD', decimal_places=2, max_digits=9)),
                ('vdi_costo', models.DecimalField(db_column='VDI_COSTO', decimal_places=3, max_digits=13)),
                ('vdi_margen', models.DecimalField(db_column='VDI_MARGEN', decimal_places=2, max_digits=10)),
                ('vdi_precio_unitario_final', models.DecimalField(blank=True, db_column='VDI_PRECIO_UNITARIO_FINAL', decimal_places=2, max_digits=15, null=True)),
                ('vdi_bonifica', models.DecimalField(db_column='VDI_BONIFICA', decimal_places=2, max_digits=4)),
                ('vdi_detalle1', models.CharField(db_column='VDI_DETALLE1', max_length=50, null=True)),
                ('vdi_detalle2', models.CharField(db_column='VDI_DETALLE2', max_length=40, null=True)),
                ('vdi_idaliiva', models.IntegerField(db_column='VDI_IDALIIVA')),
                ('vdi_idve', models.ForeignKey(db_column='VDI_IDVE', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='ventas.venta')),
            ],
            options={
                'db_table': 'VENTA_DETAITEM',
            },
        ),
        migrations.AddIndex(
            model_name='venta',
            index=models.Index(fields=['ven_fecha'], name='VENTA_VEN_FEC_72076a_idx'),
        ),
        migrations.AddIndex(
            model_name='venta',
            index=models.Index(fields=['ven_estado'], name='VENTA_VEN_EST_5e537a_idx'),
        ),
        migrations.AddIndex(
            model_name='venta',
            index=models.Index(fields=['ven_idcli'], name='VENTA_VEN_IDC_cc0484_idx'),
        ),
        migrations.AddIndex(
            model_name='venta',
            index=models.Index(fields=['ven_fecha', 'ven_estado'], name='VENTA_VEN_FEC_b8be95_idx'),
        ),
        migrations.AddConstraint(
            model_name='venta',
            constraint=models.CheckConstraint(check=models.Q(('ven_numero__gt', 0)), name='ven_numero_positivo'),
        ),
        migrations.AddConstraint(
            model_name='venta',
            constraint=models.CheckConstraint(check=models.Q(('ven_punto__gt', 0)), name='ven_punto_positivo'),
        ),
        migrations.AlterUniqueTogether(
            name='venta',
            unique_together={('ven_punto', 'ven_numero', 'comprobante')},
        ),
        migrations.AlterUniqueTogether(
            name='comprobanteasociacion',
            unique_together={('nota_credito', 'factura_afectada')},
        ),
        migrations.AddIndex(
            model_name='ventadetalleitem',
            index=models.Index(fields=['vdi_idve', 'vdi_orden'], name='VENTA_DETAI_VDI_IDV_ff9bd6_idx'),
        ),
    ]
