# Generated by Django 5.0.1 on 2025-06-21 12:00

from django.db import migrations, models

class Migration(migrations.Migration):

    dependencies = [
        ('ventas', '0038_recreate_views_after_margen_alter_2'),
    ]

    operations = [
        migrations.AddField(
            model_name='ventadetalleitem',
            name='vdi_precio_unitario_final',
            field=models.DecimalField(blank=True, db_column='VDI_PRECIO_UNITARIO_FINAL', decimal_places=2, max_digits=15, null=True),
        ),
        migrations.RunSQL(
            sql="""
            -- Paso 1: Eliminar las vistas existentes en orden de dependencia inversa.
            DROP VIEW IF EXISTS "VENTA_CALCULADO";
            DROP VIEW IF EXISTS "VENTAIVA_ALICUOTA";
            DROP VIEW IF EXISTS "VENTADETALLEITEM_CALCULADO";

            -- Paso 2: Recrear la vista de detalle con la nueva lógica de cálculo.
            CREATE VIEW "VENTADETALLEITEM_CALCULADO" AS
            WITH PreciosBase AS (
                SELECT
                    vdi."id",
                    vdi."VDI_IDVE",
                    vdi."VDI_ORDEN",
                    vdi."VDI_IDSTO",
                    vdi."VDI_IDPRO",
                    vdi."VDI_CANTIDAD",
                    vdi."VDI_COSTO",
                    vdi."VDI_MARGEN",
                    vdi."VDI_BONIFICA",
                    vdi."VDI_DETALLE1",
                    vdi."VDI_DETALLE2",
                    vdi."VDI_IDALIIVA",
                    vdi."VDI_PRECIO_UNITARIO_FINAL",
                    v."VEN_DESCU1",
                    v."VEN_DESCU2",
                    v."VEN_DESCU3",
                    ali."ALI_PORCE",
                    sto."STO_CODVTA" AS codigo,
                    sto."STO_UNIDAD" AS unidad,
                    -- Cálculo intermedio: Precio de lista unitario sin IVA (extraído del final con IVA).
                    (vdi."VDI_PRECIO_UNITARIO_FINAL" - (vdi."VDI_PRECIO_UNITARIO_FINAL" * (ali."ALI_PORCE" / 100.0))) AS precio_unitario_sin_iva
                FROM "VENTA_DETAITEM" vdi
                JOIN "VENTA" v ON vdi."VDI_IDVE" = v."VEN_ID"
                JOIN "ALICUOTASIVA" ali ON vdi."VDI_IDALIIVA" = ali."ALI_ID"
                LEFT JOIN "STOCK" sto ON vdi."VDI_IDSTO" = sto."STO_ID"
            )
            SELECT
                pb.id,
                pb."VDI_IDVE",
                pb."VDI_ORDEN",
                pb."VDI_IDSTO",
                pb."VDI_IDPRO",
                pb."VDI_CANTIDAD",
                pb."VDI_COSTO",
                pb."VDI_MARGEN",
                pb."VDI_BONIFICA",
                pb."VDI_DETALLE1",
                pb."VDI_DETALLE2",
                pb."VDI_IDALIIVA",
                pb.codigo,
                pb.unidad,
                pb."ALI_PORCE",
                -- Campos calculados finales según Recalculos.md
                (pb.precio_unitario_sin_iva * (1 - pb."VDI_BONIFICA" / 100.0)) AS precio_unitario_bonificado,
                ((pb.precio_unitario_sin_iva * (1 - pb."VDI_BONIFICA" / 100.0)) * (1 - pb."VEN_DESCU1" / 100.0) * (1 - pb."VEN_DESCU2" / 100.0)) * pb."VDI_CANTIDAD" AS subtotal_neto,
                (((pb.precio_unitario_sin_iva * (1 - pb."VDI_BONIFICA" / 100.0)) * (1 - pb."VEN_DESCU1" / 100.0) * (1 - pb."VEN_DESCU2" / 100.0)) * pb."VDI_CANTIDAD") * (pb."ALI_PORCE" / 100.0) AS iva_monto,
                ((pb.precio_unitario_sin_iva * (1 - pb."VDI_BONIFICA" / 100.0)) * (1 - pb."VEN_DESCU1" / 100.0) * (1 - pb."VEN_DESCU2" / 100.0)) * pb."VDI_CANTIDAD" + ((((pb.precio_unitario_sin_iva * (1 - pb."VDI_BONIFICA" / 100.0)) * (1 - pb."VEN_DESCU1" / 100.0) * (1 - pb."VEN_DESCU2" / 100.0)) * pb."VDI_CANTIDAD") * (pb."ALI_PORCE" / 100.0)) AS total_item,
                (pb.precio_unitario_sin_iva - pb."VDI_COSTO") AS margen_monto,
                CASE WHEN pb."VDI_COSTO" > 0 THEN ((pb.precio_unitario_sin_iva - pb."VDI_COSTO") / pb."VDI_COSTO") * 100.0 ELSE 0 END AS margen_porcentaje,
                pb."VEN_DESCU1",
                pb."VEN_DESCU2"
            FROM PreciosBase pb;

            -- Paso 3: Recrear la vista de desglose de IVA.
            CREATE VIEW "VENTAIVA_ALICUOTA" AS
            SELECT
                row_number() OVER () AS id,
                d.vdi_idve,
                d."ALI_PORCE" as ali_porce,
                SUM(d.subtotal_neto) as neto_gravado,
                SUM(d.iva_monto) as iva_total
            FROM "VENTADETALLEITEM_CALCULADO" d
            GROUP BY d.vdi_idve, d."ALI_PORCE";

            -- Paso 4: Recrear la vista de cabecera que totaliza los resultados.
            CREATE VIEW "VENTA_CALCULADO" AS
            WITH Totales AS (
                SELECT
                    vdi_idve,
                    SUM(subtotal_neto) AS total_neto,
                    SUM(iva_monto) AS total_iva,
                    SUM(total_item) AS total_final
                FROM "VENTADETALLEITEM_CALCULADO"
                GROUP BY vdi_idve
            )
            SELECT
                v."VEN_ID" AS ven_id,
                v."VEN_SUCURSAL" AS ven_sucursal,
                v."VEN_FECHA" AS ven_fecha,
                v."VEN_HORA_CREACION" AS hora_creacion,
                c."id" AS comprobante_id,
                c."CBT_NOMBRE" AS comprobante_nombre,
                c."CBT_LETRA" AS comprobante_letra,
                c."CBT_TIPO" AS comprobante_tipo,
                c."CBT_CODIGO_AFIP" AS comprobante_codigo_afip,
                c."CBT_DESCRIPCION" AS comprobante_descripcion,
                c."CBT_ACTIVO" AS comprobante_activo,
                v."VEN_PUNTO" AS ven_punto,
                v."VEN_NUMERO" AS ven_numero,
                v."VEN_DESCU1" AS ven_descu1,
                v."VEN_DESCU2" AS ven_descu2,
                v."VEN_DESCU3" AS ven_descu3,
                v."VEN_VDOCOMVTA" AS ven_vdocomvta,
                v."VEN_VDOCOMCOB" AS ven_vdocomcob,
                v."VEN_ESTADO" AS ven_estado,
                v."VEN_IDCLI" AS ven_idcli,
                v."VEN_CUIT" AS ven_cuit,
                v."VEN_DOMICILIO" AS ven_domicilio,
                v."VEN_IDPLA" AS ven_idpla,
                v."VEN_IDVDO" AS ven_idvdo,
                v."VEN_COPIA" AS ven_copia,
                v."VEN_FECANULA" AS ven_fecanula,
                v."VEN_CAE" AS ven_cae,
                v."VEN_CAEVENCIMIENTO" AS ven_caevencimiento,
                v."VEN_QR" AS ven_qr,
                v."VEN_BONIFICACION_GENERAL" AS ven_bonificacion_general,
                t.total_neto AS ven_impneto,
                t.total_iva AS iva_global,
                t.total_final AS ven_total,
                (
                    SELECT SUM(precio_unitario_bonificado * vdi_cantidad)
                    FROM "VENTADETALLEITEM_CALCULADO"
                    WHERE vdi_idve = v."VEN_ID"
                ) AS subtotal_bruto
            FROM "VENTA" v
            LEFT JOIN Totales t ON v."VEN_ID" = t.vdi_idve
            LEFT JOIN "COMPROBANTES" c ON v."VEN_CODCOMPROB" = c."CBT_CODIGO_AFIP";
            """,
            reverse_sql="""
            DROP VIEW IF EXISTS "VENTA_CALCULADO";
            DROP VIEW IF EXISTS "VENTAIVA_ALICUOTA";
            DROP VIEW IF EXISTS "VENTADETALLEITEM_CALCULADO";
            -- Aquí iría el SQL para recrear las vistas a su estado anterior (pre-migración).
            -- Por simplicidad, solo las eliminamos. La migración anterior las recreará si se revierte.
            """
        ),
    ] 